server:
  port: 8081
spring:
  jackson:
    property-naming-strategy: SNAKE_CASE
  datasource:
    url: jdbc:h2:./.local-db/statistics
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  h2:
    console:
      path: /db
      enabled: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer: #DTL
      # key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # https://docs.spring.io/spring-kafka/reference/kafka/serdes.html#json-serde (Jackson)
      value-serializer: de.sample.schulung.statistics.kafka.CustomJsonSerializer
      properties:
        # do not serialize the class name into the message
        "[spring.json.add.type.headers]": false
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      #de.sample.schulung.statistics.kafka.CustomJsonDeserializer
      properties:
        "[spring.json.use.type.headers]": false
        "[spring.json.value.default.type]": de.sample.schulung.statistics.kafka.CustomerEventRecord
        "[spring.deserializer.value.delegate.class]": de.sample.schulung.statistics.kafka.CustomJsonDeserializer
        "[spring.deserializer.value.function]": de.sample.schulung.statistics.kafka.CustomDeserializationFailureHandler
      group-id: customer-statistics
      auto-offset-reset: earliest
      enable-auto-commit: false
    listener:
      ack-mode: manual
application:
  init-sample-data:
    enabled: true